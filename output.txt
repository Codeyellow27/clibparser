compilationUnit
 translationUnit
  externalDeclaration
   declaration
    declarationSpecifiers
     declarationSpecifier
      typeSpecifier
       structOrUnionSpecifier
        structOrUnion
         keyword: struct
        id: sx
        structDeclarationList
         structDeclaration
          specifierQualifierList
           typeSpecifier
            keyword: int
          structDeclaratorList
           structDeclarator
            declarator
             pointer
              operator: *
             directDeclarator
              id: a
         structDeclaration
          specifierQualifierList
           typeSpecifier
            keyword: double
          structDeclaratorList
           structDeclarator
            declarator
             directDeclarator
              id: b
  externalDeclaration
   declaration
    declarationSpecifiers
     declarationSpecifier
      typeSpecifier
       keyword: int
    initDeclaratorList
     initDeclarator
      declarator
       pointer
        operator: *
       directDeclarator
        id: a
     initDeclarator
      declarator
       pointer
        operator: *
       directDeclarator
        id: _a
     initDeclarator
      declarator
       directDeclarator
        id: _b
      initializer
       primaryExpression
        constant
         int: 1
  externalDeclaration
   declaration
    declarationSpecifiers
     declarationSpecifier
      typeSpecifier
       keyword: char
    initDeclaratorList
     initDeclarator
      declarator
       pointer
        operator: *
       directDeclarator
        id: _c
      initializer
       primaryExpression
        string: "Hello world!"
  externalDeclaration
   declaration
    declarationSpecifiers
     declarationSpecifier
      typeSpecifier
       keyword: double
    initDeclaratorList
     initDeclarator
      declarator
       pointer
        operator: *
       directDeclarator
        id: b
  externalDeclaration
   functionDefinition
    declarationSpecifiers
     declarationSpecifier
      typeSpecifier
       keyword: int
    declarator
     pointer
      operator: *
     directDeclarator
      id: main1
      operator: (
      parameterTypeList
       parameterList
        parameterDeclaration
         declarationSpecifiers
          declarationSpecifier
           typeSpecifier
            keyword: int
         declarator
          directDeclarator
           id: c
        parameterDeclaration
         declarationSpecifiers
          declarationSpecifier
           typeSpecifier
            keyword: float
         declarator
          pointer
           operator: *
          directDeclarator
           id: d
        parameterDeclaration
         declarationSpecifiers
          declarationSpecifier
           typeSpecifier
            typedefName
             id: sx
         declarator
          directDeclarator
           id: x
        parameterDeclaration
         declarationSpecifiers
          declarationSpecifier
           typeSpecifier
            keyword: char
         declarator
          directDeclarator
           id: y
    compoundStatement
     blockItemList
      blockItem
       declaration
        declarationSpecifiers
         declarationSpecifier
          typeSpecifier
           keyword: unsigned
         declarationSpecifier
          typeSpecifier
           keyword: int
        initDeclaratorList
         initDeclarator
          declarator
           pointer
            operator: *
           directDeclarator
            id: a
         initDeclarator
          declarator
           pointer
            operator: *
           directDeclarator
            id: b
      blockItem
       declaration
        declarationSpecifiers
         declarationSpecifier
          typeSpecifier
           keyword: float
        initDeclaratorList
         initDeclarator
          declarator
           directDeclarator
            id: d
         initDeclarator
          declarator
           pointer
            operator: *
           directDeclarator
            id: e
         initDeclarator
          declarator
           directDeclarator
            id: f
      blockItem
       declaration
        declarationSpecifiers
         declarationSpecifier
          typeSpecifier
           typedefName
            id: sx
        initDeclaratorList
         initDeclarator
          declarator
           pointer
            operator: *
           directDeclarator
            id: s1
  externalDeclaration
   functionDefinition
    declarationSpecifiers
     declarationSpecifier
      typeSpecifier
       keyword: int
    declarator
     directDeclarator
      id: main2
      operator: (
    compoundStatement
     blockItemList
      blockItem
       declaration
        declarationSpecifiers
         declarationSpecifier
          typeSpecifier
           keyword: int
        initDeclaratorList
         initDeclarator
          declarator
           directDeclarator
            id: a
         initDeclarator
          declarator
           directDeclarator
            id: b
         initDeclarator
          declarator
           directDeclarator
            id: c
      blockItem
       statement
        expressionStatement
         additiveExpression
          primaryExpression
           id: a
          operator: +
          primaryExpression
           id: b
          operator: +
          primaryExpression
           constant
            int: 1
          operator: -
          primaryExpression
           constant
            int: 2
      blockItem
       statement
        expressionStatement
         assignmentExpression
          primaryExpression
           id: a
          assignmentOperator
           operator: =
          assignmentExpression
           primaryExpression
            id: b
           assignmentOperator
            operator: =
           primaryExpression
            id: c
  externalDeclaration
   declaration
    declarationSpecifiers
     declarationSpecifier
      typeSpecifier
       keyword: int
    initDeclaratorList
     initDeclarator
      declarator
       directDeclarator
        id: ta
     initDeclarator
      declarator
       directDeclarator
        id: test
        operator: (
        parameterTypeList
         parameterList
          parameterDeclaration
           declarationSpecifiers
            declarationSpecifier
             typeSpecifier
              keyword: unsigned
            declarationSpecifier
             typeSpecifier
              keyword: int
           declarator
            directDeclarator
             id: a
          parameterDeclaration
           declarationSpecifiers
            declarationSpecifier
             typeSpecifier
              keyword: double
           declarator
            directDeclarator
             id: b
          parameterDeclaration
           declarationSpecifiers
            declarationSpecifier
             typeSpecifier
              keyword: char
           declarator
            directDeclarator
             id: c
     initDeclarator
      declarator
       directDeclarator
        id: tb
        operator: (
        parameterTypeList
         parameterList
          parameterDeclaration
           declarationSpecifiers
            declarationSpecifier
             typeSpecifier
              keyword: long
           declarator
            directDeclarator
             id: d
     initDeclarator
      declarator
       directDeclarator
        id: tc
     initDeclarator
      declarator
       directDeclarator
        id: td
        operator: (
        parameterTypeList
         parameterList
          parameterDeclaration
           declarationSpecifiers
            declarationSpecifier
             typeSpecifier
              keyword: int
           declarator
            directDeclarator
             id: e
  externalDeclaration
   declaration
    declarationSpecifiers
     declarationSpecifier
      typeSpecifier
       keyword: char
    initDeclaratorList
     initDeclarator
      declarator
       pointer
        operator: *
       directDeclarator
        id: aa
      initializer
       primaryExpression
        string: "bajdcc"
  externalDeclaration
   declaration
    declarationSpecifiers
     declarationSpecifier
      typeSpecifier
       keyword: int
    initDeclaratorList
     initDeclarator
      declarator
       directDeclarator
        id: bb
      initializer
       primaryExpression
        constant
         int: 2
  externalDeclaration
   declaration
    declarationSpecifiers
     declarationSpecifier
      typeSpecifier
       keyword: int
    initDeclaratorList
     initDeclarator
      declarator
       directDeclarator
        id: dd
      initializer
       primaryExpression
        id: bb
  externalDeclaration
   functionDefinition
    declarationSpecifiers
     declarationSpecifier
      typeSpecifier
       keyword: int
    declarator
     directDeclarator
      id: main
      operator: (
    compoundStatement
     blockItemList
      blockItem
       declaration
        declarationSpecifiers
         declarationSpecifier
          typeSpecifier
           keyword: char
        initDeclaratorList
         initDeclarator
          declarator
           pointer
            operator: *
           directDeclarator
            id: ee
          initializer
           primaryExpression
            string: "hello"
      blockItem
       declaration
        declarationSpecifiers
         declarationSpecifier
          typeSpecifier
           keyword: char
        initDeclaratorList
         initDeclarator
          declarator
           pointer
            operator: *
           directDeclarator
            id: ff
          initializer
           primaryExpression
            id: aa
      blockItem
       declaration
        declarationSpecifiers
         declarationSpecifier
          typeSpecifier
           keyword: char
        initDeclaratorList
         initDeclarator
          declarator
           pointer
            operator: *
           directDeclarator
            id: gg
          initializer
           primaryExpression
            id: ff
      blockItem
       declaration
        declarationSpecifiers
         declarationSpecifier
          typeSpecifier
           keyword: int
        initDeclaratorList
         initDeclarator
          declarator
           directDeclarator
            id: cc
          initializer
           primaryExpression
            constant
             int: 1
      blockItem
       statement
        expressionStatement
         primaryExpression
          id: aa
      blockItem
       statement
        expressionStatement
         primaryExpression
          id: bb
      blockItem
       statement
        expressionStatement
         additiveExpression
          primaryExpression
           id: bb
          operator: +
          primaryExpression
           constant
            int: 1
      blockItem
       statement
        expressionStatement
         primaryExpression
          id: dd
      blockItem
       statement
        expressionStatement
         additiveExpression
          primaryExpression
           id: cc
          operator: +
          primaryExpression
           constant
            int: 1
      blockItem
       declaration
        declarationSpecifiers
         declarationSpecifier
          typeSpecifier
           keyword: int
        initDeclaratorList
         initDeclarator
          declarator
           directDeclarator
            id: x
          initializer
           primaryExpression
            constant
             int: 1
         initDeclarator
          declarator
           directDeclarator
            id: y
          initializer
           primaryExpression
            constant
             int: 2
         initDeclarator
          declarator
           directDeclarator
            id: z
          initializer
           primaryExpression
            constant
             int: 3
      blockItem
       statement
        expressionStatement
         assignmentExpression
          primaryExpression
           id: x
          assignmentOperator
           operator: +=
          assignmentExpression
           primaryExpression
            id: y
           assignmentOperator
            operator: *=
           primaryExpression
            id: z
      blockItem
       statement
        expressionStatement
         assignmentExpression
          primaryExpression
           id: z
          assignmentOperator
           operator: =
          relationalExpression
           primaryExpression
            id: x
           operator: <
           primaryExpression
            id: y
      blockItem
       statement
        expressionStatement
         assignmentExpression
          primaryExpression
           id: z
          assignmentOperator
           operator: =
          additiveExpression
           multiplicativeExpression
            primaryExpression
             constant
              int: 1
            operator: *
            primaryExpression
             constant
              int: 2
            operator: /
            primaryExpression
             constant
              int: 3
           operator: +
           primaryExpression
            constant
             int: 4
      blockItem
       statement
        expressionStatement
         additiveExpression
          unaryExpression
           operator: ++
           primaryExpression
            id: z
          operator: +
          primaryExpression
           id: z
      blockItem
       statement
        expressionStatement
         additiveExpression
          postfixExpression
           primaryExpression
            id: z
           operator: ++
          operator: +
          primaryExpression
           id: z
      blockItem
       statement
        expressionStatement
         unaryExpression
          unaryOperator
           operator: &
          primaryExpression
           id: z
      blockItem
       statement
        expressionStatement
         unaryExpression
          unaryOperator
           operator: *
          primaryExpression
           id: ee
      blockItem
       statement
        expressionStatement
         unaryExpression
          unaryOperator
           operator: *
          primaryExpression
           additiveExpression
            primaryExpression
             id: ee
            operator: +
            primaryExpression
             constant
              int: 2
      blockItem
       statement
        expressionStatement
         assignmentExpression
          unaryExpression
           unaryOperator
            operator: *
           primaryExpression
            id: ee
          assignmentOperator
           operator: =
          primaryExpression
           constant
            char: '9'
      blockItem
       statement
        expressionStatement
         postfixExpression
          primaryExpression
           id: ee
          operator: [
          primaryExpression
           constant
            int: 2
      blockItem
       statement
        expressionStatement
         assignmentExpression
          postfixExpression
           primaryExpression
            id: ee
           operator: [
           primaryExpression
            constant
             int: 2
          assignmentOperator
           operator: =
          primaryExpression
           constant
            char: '8'
      blockItem
       statement
        expressionStatement
         assignmentExpression
          primaryExpression
           id: z
          assignmentOperator
           operator: =
          primaryExpression
           constant
            int: 2
      blockItem
       statement
        expressionStatement
         additiveExpression
          unaryExpression
           operator: --
           postfixExpression
            primaryExpression
             id: z
            operator: ++
          operator: +
          unaryExpression
           operator: --
           postfixExpression
            primaryExpression
             id: z
            operator: ++
[DEBUG] Type: int
[DEBUG] Id: int* a, Class: struct id, Addr: 0
[DEBUG] Type: double
[DEBUG] Id: double b, Class: struct id, Addr: 0
[DEBUG] Type: int
[DEBUG] Id: int* a, Class: global id, Addr: 0
[DEBUG] Id: int* _a, Class: global id, Addr: 4
[DEBUG] Id: int _b, Class: global id, Init: (type: int, int: 1), Addr: 8
[DEBUG] Type: char
[DEBUG] *GEN* <== STRING: "Hello world!", addr: 12, size: 12
[DEBUG] Id: char* _c, Class: global id, Init: (type: char*, string: "Hello world!"), Addr: 12
[DEBUG] Type: double
[DEBUG] Id: double* b, Class: global id, Addr: 28
[DEBUG] Type: int
[DEBUG] Type: int
[DEBUG] Type: float
[DEBUG] Type: sx
[DEBUG] Type: char
[DEBUG] Func: int* main1, Param: [int c, Class: param id, Addr: 0; float* d, Class: param id, Addr: 4; sx x, Class: para
m id, Addr: 8; char y, Class: param id, Addr: 20], Class: func id, Addr: 0
[DEBUG] *GEN* ==> ENT 0
[DEBUG] Type: uint
[DEBUG] Id: uint* a, Class: local id, Addr: -4
[DEBUG] Id: uint* b, Class: local id, Addr: -8
[DEBUG] Type: float
[DEBUG] Id: float d, Class: local id, Addr: -12
[DEBUG] Id: float* e, Class: local id, Addr: -16
[DEBUG] Id: float f, Class: local id, Addr: -20
[DEBUG] Type: sx
[DEBUG] Id: sx* s1, Class: local id, Addr: -24
[DEBUG] *GEN* ==> LEV
[DEBUG] Type: int
[DEBUG] Func: int main2, Param: [], Class: func id, Addr: 3
[DEBUG] *GEN* ==> ENT 0
[DEBUG] Type: int
[DEBUG] Id: int a, Class: local id, Addr: -4
[DEBUG] Id: int b, Class: local id, Addr: -8
[DEBUG] Id: int c, Class: local id, Addr: -12
[DEBUG] Exp: (binop, operator: -, exp1: (binop, operator: +, exp1: (binop, operator: +, exp1: int a, Class: local id, Ad
dr: -4, exp2: int b, Class: local id, Addr: -8), exp2: (type: int, int: 1)), exp2: (type: int, int: 2))
[DEBUG] *GEN* ==> LEA FFFFFFFC
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFF8
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> ADD
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 1
[DEBUG] *GEN* ==> ADD
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 2
[DEBUG] *GEN* ==> SUB
[DEBUG] Exp: (binop, operator: =, exp1: int a, Class: local id, Addr: -4, exp2: (binop, operator: =, exp1: int b, Class:
 local id, Addr: -8, exp2: int c, Class: local id, Addr: -12))
[DEBUG] *GEN* ==> LEA FFFFFFFC
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFF8
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFF4
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] *GEN* ==> LEV
[DEBUG] Type: int
[DEBUG] Type: uint
[DEBUG] Type: double
[DEBUG] Type: char
[DEBUG] Func: int test, Param: [uint a, Class: param id, Addr: 0; double b, Class: param id, Addr: 4; char c, Class: par
am id, Addr: 12], Class: func id, Addr: 38
[DEBUG] Type: long
[DEBUG] Func: int tb, Param: [long d, Class: param id, Addr: 0], Class: func id, Addr: 38
[DEBUG] Type: int
[DEBUG] Func: int td, Param: [int e, Class: param id, Addr: 0], Class: func id, Addr: 38
[DEBUG] Id: int ta, Class: global id, Addr: 32
[DEBUG] Id: int tc, Class: global id, Addr: 36
[DEBUG] Type: char
[DEBUG] *GEN* <== STRING: "bajdcc", addr: 28, size: 6
[DEBUG] Id: char* aa, Class: global id, Init: (type: char*, string: "bajdcc"), Addr: 40
[DEBUG] Type: int
[DEBUG] Id: int bb, Class: global id, Init: (type: int, int: 2), Addr: 48
[DEBUG] Type: int
[DEBUG] Id: int dd, Class: global id, Init: int bb, Class: global id, Init: (type: int, int: 2), Addr: 48, Addr: 52
[DEBUG] Type: int
[DEBUG] Func: int main, Param: [], Class: func id, Addr: 38
[DEBUG] *GEN* ==> ENT 0
[DEBUG] Type: char
[DEBUG] *GEN* ==> LEA FFFFFFFC
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* <== STRING: "hello", addr: 38, size: 5
[DEBUG] *GEN* ==> IMM D0000038
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] Id: char* ee, Class: local id, Init: (type: char*, string: "hello"), Addr: -4
[DEBUG] Type: char
[DEBUG] *GEN* ==> LEA FFFFFFF8
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM D0000028
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] Id: char* ff, Class: local id, Init: char* aa, Class: global id, Init: (type: char*, string: "bajdcc"), Addr: 40
, Addr: -8
[DEBUG] Type: char
[DEBUG] *GEN* ==> LEA FFFFFFF4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFF8
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] Id: char* gg, Class: local id, Init: char* ff, Class: local id, Init: char* aa, Class: global id, Init: (type: c
har*, string: "bajdcc"), Addr: 40, Addr: -8, Addr: -12
[DEBUG] Type: int
[DEBUG] *GEN* ==> LEA FFFFFFF0
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 1
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] Id: int cc, Class: local id, Init: (type: int, int: 1), Addr: -16
[DEBUG] Exp: char* aa, Class: global id, Init: (type: char*, string: "bajdcc"), Addr: 40
[DEBUG] *GEN* ==> IMM D0000028
[DEBUG] Exp: int bb, Class: global id, Init: (type: int, int: 2), Addr: 48
[DEBUG] *GEN* ==> IMM D0000030
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] Exp: (binop, operator: +, exp1: int bb, Class: global id, Init: (type: int, int: 2), Addr: 48, exp2: (type: int,
 int: 1))
[DEBUG] *GEN* ==> IMM D0000030
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 1
[DEBUG] *GEN* ==> ADD
[DEBUG] Exp: int dd, Class: global id, Init: int bb, Class: global id, Init: (type: int, int: 2), Addr: 48, Addr: 52
[DEBUG] *GEN* ==> IMM D0000034
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] Exp: (binop, operator: +, exp1: int cc, Class: local id, Init: (type: int, int: 1), Addr: -16, exp2: (type: int,
 int: 1))
[DEBUG] *GEN* ==> LEA FFFFFFF0
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 1
[DEBUG] *GEN* ==> ADD
[DEBUG] Type: int
[DEBUG] *GEN* ==> LEA FFFFFFEC
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 1
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] Id: int x, Class: local id, Init: (type: int, int: 1), Addr: -20
[DEBUG] *GEN* ==> LEA FFFFFFE8
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 2
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] Id: int y, Class: local id, Init: (type: int, int: 2), Addr: -24
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 3
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] Id: int z, Class: local id, Init: (type: int, int: 3), Addr: -28
[DEBUG] Exp: (binop, operator: +=, exp1: int x, Class: local id, Init: (type: int, int: 1), Addr: -20, exp2: (binop, ope
rator: *=, exp1: int y, Class: local id, Init: (type: int, int: 2), Addr: -24, exp2: int z, Class: local id, Init: (type
: int, int: 3), Addr: -28))
[DEBUG] *GEN* ==> LEA FFFFFFEC
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFEC
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFE8
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFE8
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> MUL
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] *GEN* ==> ADD
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] Exp: (binop, operator: =, exp1: int z, Class: local id, Init: (type: int, int: 3), Addr: -28, exp2: (binop, oper
ator: <, exp1: int x, Class: local id, Init: (type: int, int: 1), Addr: -20, exp2: int y, Class: local id, Init: (type:
int, int: 2), Addr: -24))
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFEC
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFE8
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> LT
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] Exp: (binop, operator: =, exp1: int z, Class: local id, Init: (type: int, int: 3), Addr: -28, exp2: (binop, oper
ator: +, exp1: (binop, operator: /, exp1: (binop, operator: *, exp1: (type: int, int: 1), exp2: (type: int, int: 2)), ex
p2: (type: int, int: 3)), exp2: (type: int, int: 4)))
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 1
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 2
[DEBUG] *GEN* ==> MUL
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 3
[DEBUG] *GEN* ==> DIV
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 4
[DEBUG] *GEN* ==> ADD
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] Exp: (binop, operator: +, exp1: (unop, operator: ++, exp: int z, Class: local id, Init: (type: int, int: 3), Add
r: -28), exp2: int z, Class: local id, Init: (type: int, int: 3), Addr: -28)
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 1
[DEBUG] *GEN* ==> ADD
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> ADD
[DEBUG] Exp: (binop, operator: +, exp1: (sinop, operator: ++, exp: int z, Class: local id, Init: (type: int, int: 3), Ad
dr: -28), exp2: int z, Class: local id, Init: (type: int, int: 3), Addr: -28)
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 1
[DEBUG] *GEN* ==> ADD
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] *GEN* ==> POP
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> ADD
[DEBUG] Exp: (unop, operator: &, exp: int z, Class: local id, Init: (type: int, int: 3), Addr: -28)
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] Exp: (unop, operator: *, exp: char* ee, Class: local id, Init: (type: char*, string: "hello"), Addr: -4)
[DEBUG] *GEN* ==> LEA FFFFFFFC
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> LOAD 1
[DEBUG] Exp: (unop, operator: *, exp: (binop, operator: +, exp1: char* ee, Class: local id, Init: (type: char*, string:
"hello"), Addr: -4, exp2: (type: int, int: 2)))
[DEBUG] *GEN* ==> LEA FFFFFFFC
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 2
[DEBUG] *GEN* ==> ADD
[DEBUG] *GEN* ==> LOAD 1
[DEBUG] Exp: (binop, operator: =, exp1: (unop, operator: *, exp: char* ee, Class: local id, Init: (type: char*, string:
"hello"), Addr: -4), exp2: (type: char, char: '9'))
[DEBUG] *GEN* ==> LEA FFFFFFFC
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 39
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] Exp: (binop, operator: [, exp1: char* ee, Class: local id, Init: (type: char*, string: "hello"), Addr: -4, exp2:
 (type: int, int: 2))
[DEBUG] *GEN* ==> LEA FFFFFFFC
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 2
[DEBUG] *GEN* ==> ADD
[DEBUG] *GEN* ==> LOAD 1
[DEBUG] Exp: (binop, operator: =, exp1: (binop, operator: [, exp1: char* ee, Class: local id, Init: (type: char*, string
: "hello"), Addr: -4, exp2: (type: int, int: 2)), exp2: (type: char, char: '8'))
[DEBUG] *GEN* ==> LEA FFFFFFFC
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 2
[DEBUG] *GEN* ==> ADD
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 38
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] Exp: (binop, operator: =, exp1: int z, Class: local id, Init: (type: int, int: 3), Addr: -28, exp2: (type: int,
int: 2))
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 2
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] Exp: (binop, operator: +, exp1: (unop, operator: --, exp: (sinop, operator: ++, exp: int z, Class: local id, Ini
t: (type: int, int: 3), Addr: -28)), exp2: (unop, operator: --, exp: (sinop, operator: ++, exp: int z, Class: local id,
Init: (type: int, int: 3), Addr: -28)))
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 1
[DEBUG] *GEN* ==> ADD
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] *GEN* ==> POP
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 1
[DEBUG] *GEN* ==> ADD
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] *GEN* ==> POP
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 1
[DEBUG] *GEN* ==> SUB
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 1
[DEBUG] *GEN* ==> ADD
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] *GEN* ==> POP
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> LEA FFFFFFE4
[DEBUG] *GEN* ==> LOAD 4
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 1
[DEBUG] *GEN* ==> ADD
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] *GEN* ==> POP
[DEBUG] *GEN* ==> PUSH
[DEBUG] *GEN* ==> IMM 1
[DEBUG] *GEN* ==> SUB
[DEBUG] *GEN* ==> SAVE 4
[DEBUG] *GEN* ==> ADD
[DEBUG] *GEN* ==> LEV
0001> [C000009C] 08 ENT 0000001C(28)

---------------- STACK BEGIN <<<<
AX: 00000000 BP: E0000FF0 SP: E0000FD4 PC: C00000A0
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000000
[E0000FE4]> 00000000
[E0000FE8]> 00000000
[E0000FEC]> 00000000
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0002> [C00000A4] 01 LEA FFFFFFFC(-4)

---------------- STACK BEGIN <<<<
AX: E0000FEC BP: E0000FF0 SP: E0000FD4 PC: C00000A8
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000000
[E0000FE4]> 00000000
[E0000FE8]> 00000000
[E0000FEC]> 00000000
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0003> [C00000AC] 13 PUSH E0000FEC

---------------- STACK BEGIN <<<<
AX: E0000FEC BP: E0000FF0 SP: E0000FD0 PC: C00000AC
[E0000FD0]> E0000FEC
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000000
[E0000FE4]> 00000000
[E0000FE8]> 00000000
[E0000FEC]> 00000000
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0004> [C00000B0] 02 IMM D0000038(-805306312)

---------------- STACK BEGIN <<<<
AX: D0000038 BP: E0000FF0 SP: E0000FD0 PC: C00000B4
[E0000FD0]> E0000FEC
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000000
[E0000FE4]> 00000000
[E0000FE8]> 00000000
[E0000FEC]> 00000000
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0005> [C00000B8] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: D0000038 BP: E0000FF0 SP: E0000FD4 PC: C00000BC
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000000
[E0000FE4]> 00000000
[E0000FE8]> 00000000
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0006> [C00000C0] 01 LEA FFFFFFF8(-8)

---------------- STACK BEGIN <<<<
AX: E0000FE8 BP: E0000FF0 SP: E0000FD4 PC: C00000C4
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000000
[E0000FE4]> 00000000
[E0000FE8]> 00000000
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0007> [C00000C8] 13 PUSH E0000FE8

---------------- STACK BEGIN <<<<
AX: E0000FE8 BP: E0000FF0 SP: E0000FD0 PC: C00000C8
[E0000FD0]> E0000FE8
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000000
[E0000FE4]> 00000000
[E0000FE8]> 00000000
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0008> [C00000CC] 02 IMM D0000028(-805306328)

---------------- STACK BEGIN <<<<
AX: D0000028 BP: E0000FF0 SP: E0000FD0 PC: C00000D0
[E0000FD0]> E0000FE8
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000000
[E0000FE4]> 00000000
[E0000FE8]> 00000000
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0009> [C00000D4] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: D0000028 BP: E0000FF0 SP: E0000FD4 PC: C00000D8
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000000
[E0000FE4]> 00000000
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0010> [C00000DC] 01 LEA FFFFFFF4(-12)

---------------- STACK BEGIN <<<<
AX: E0000FE4 BP: E0000FF0 SP: E0000FD4 PC: C00000E0
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000000
[E0000FE4]> 00000000
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0011> [C00000E4] 13 PUSH E0000FE4

---------------- STACK BEGIN <<<<
AX: E0000FE4 BP: E0000FF0 SP: E0000FD0 PC: C00000E4
[E0000FD0]> E0000FE4
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000000
[E0000FE4]> 00000000
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0012> [C00000E8] 01 LEA FFFFFFF8(-8)

---------------- STACK BEGIN <<<<
AX: E0000FE8 BP: E0000FF0 SP: E0000FD0 PC: C00000EC
[E0000FD0]> E0000FE4
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000000
[E0000FE4]> 00000000
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0013> [C00000F0] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: D0000028 BP: E0000FF0 SP: E0000FD0 PC: C00000F4
[E0000FD0]> E0000FE4
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000000
[E0000FE4]> 00000000
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0014> [C00000F8] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: D0000028 BP: E0000FF0 SP: E0000FD4 PC: C00000FC
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000000
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0015> [C0000100] 01 LEA FFFFFFF0(-16)

---------------- STACK BEGIN <<<<
AX: E0000FE0 BP: E0000FF0 SP: E0000FD4 PC: C0000104
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000000
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0016> [C0000108] 13 PUSH E0000FE0

---------------- STACK BEGIN <<<<
AX: E0000FE0 BP: E0000FF0 SP: E0000FD0 PC: C0000108
[E0000FD0]> E0000FE0
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000000
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0017> [C000010C] 02 IMM 00000001(1)

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FD0 PC: C0000110
[E0000FD0]> E0000FE0
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000000
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0018> [C0000114] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FD4 PC: C0000118
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0019> [C000011C] 02 IMM D0000028(-805306328)

---------------- STACK BEGIN <<<<
AX: D0000028 BP: E0000FF0 SP: E0000FD4 PC: C0000120
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0020> [C0000124] 02 IMM D0000030(-805306320)

---------------- STACK BEGIN <<<<
AX: D0000030 BP: E0000FF0 SP: E0000FD4 PC: C0000128
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0021> [C000012C] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FD4 PC: C0000130
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0022> [C0000134] 02 IMM D0000030(-805306320)

---------------- STACK BEGIN <<<<
AX: D0000030 BP: E0000FF0 SP: E0000FD4 PC: C0000138
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0023> [C000013C] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FD4 PC: C0000140
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0024> [C0000144] 13 PUSH 00000002

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FD0 PC: C0000144
[E0000FD0]> 00000002
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0025> [C0000148] 02 IMM 00000001(1)

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FD0 PC: C000014C
[E0000FD0]> 00000002
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0026> [C0000150] 26 ADD

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FD4 PC: C0000150
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0027> [C0000154] 02 IMM D0000034(-805306316)

---------------- STACK BEGIN <<<<
AX: D0000034 BP: E0000FF0 SP: E0000FD4 PC: C0000158
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0028> [C000015C] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FD4 PC: C0000160
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0029> [C0000164] 01 LEA FFFFFFF0(-16)

---------------- STACK BEGIN <<<<
AX: E0000FE0 BP: E0000FF0 SP: E0000FD4 PC: C0000168
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0030> [C000016C] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FD4 PC: C0000170
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0031> [C0000174] 13 PUSH 00000001

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FD0 PC: C0000174
[E0000FD0]> 00000001
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0032> [C0000178] 02 IMM 00000001(1)

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FD0 PC: C000017C
[E0000FD0]> 00000001
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0033> [C0000180] 26 ADD

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FD4 PC: C0000180
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0034> [C0000184] 01 LEA FFFFFFEC(-20)

---------------- STACK BEGIN <<<<
AX: E0000FDC BP: E0000FF0 SP: E0000FD4 PC: C0000188
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0035> [C000018C] 13 PUSH E0000FDC

---------------- STACK BEGIN <<<<
AX: E0000FDC BP: E0000FF0 SP: E0000FD0 PC: C000018C
[E0000FD0]> E0000FDC
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0036> [C0000190] 02 IMM 00000001(1)

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FD0 PC: C0000194
[E0000FD0]> E0000FDC
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000000
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0037> [C0000198] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FD4 PC: C000019C
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0038> [C00001A0] 01 LEA FFFFFFE8(-24)

---------------- STACK BEGIN <<<<
AX: E0000FD8 BP: E0000FF0 SP: E0000FD4 PC: C00001A4
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0039> [C00001A8] 13 PUSH E0000FD8

---------------- STACK BEGIN <<<<
AX: E0000FD8 BP: E0000FF0 SP: E0000FD0 PC: C00001A8
[E0000FD0]> E0000FD8
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0040> [C00001AC] 02 IMM 00000002(2)

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FD0 PC: C00001B0
[E0000FD0]> E0000FD8
[E0000FD4]> 00000000
[E0000FD8]> 00000000
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0041> [C00001B4] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FD4 PC: C00001B8
[E0000FD4]> 00000000
[E0000FD8]> 00000002
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0042> [C00001BC] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD4 PC: C00001C0
[E0000FD4]> 00000000
[E0000FD8]> 00000002
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0043> [C00001C4] 13 PUSH E0000FD4

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD0 PC: C00001C4
[E0000FD0]> E0000FD4
[E0000FD4]> 00000000
[E0000FD8]> 00000002
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0044> [C00001C8] 02 IMM 00000003(3)

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FD0 PC: C00001CC
[E0000FD0]> E0000FD4
[E0000FD4]> 00000000
[E0000FD8]> 00000002
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0045> [C00001D0] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FD4 PC: C00001D4
[E0000FD4]> 00000003
[E0000FD8]> 00000002
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0046> [C00001D8] 01 LEA FFFFFFEC(-20)

---------------- STACK BEGIN <<<<
AX: E0000FDC BP: E0000FF0 SP: E0000FD4 PC: C00001DC
[E0000FD4]> 00000003
[E0000FD8]> 00000002
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0047> [C00001E0] 13 PUSH E0000FDC

---------------- STACK BEGIN <<<<
AX: E0000FDC BP: E0000FF0 SP: E0000FD0 PC: C00001E0
[E0000FD0]> E0000FDC
[E0000FD4]> 00000003
[E0000FD8]> 00000002
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0048> [C00001E4] 01 LEA FFFFFFEC(-20)

---------------- STACK BEGIN <<<<
AX: E0000FDC BP: E0000FF0 SP: E0000FD0 PC: C00001E8
[E0000FD0]> E0000FDC
[E0000FD4]> 00000003
[E0000FD8]> 00000002
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0049> [C00001EC] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FD0 PC: C00001F0
[E0000FD0]> E0000FDC
[E0000FD4]> 00000003
[E0000FD8]> 00000002
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0050> [C00001F4] 13 PUSH 00000001

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FCC PC: C00001F4
[E0000FCC]> 00000001
[E0000FD0]> E0000FDC
[E0000FD4]> 00000003
[E0000FD8]> 00000002
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0051> [C00001F8] 01 LEA FFFFFFE8(-24)

---------------- STACK BEGIN <<<<
AX: E0000FD8 BP: E0000FF0 SP: E0000FCC PC: C00001FC
[E0000FCC]> 00000001
[E0000FD0]> E0000FDC
[E0000FD4]> 00000003
[E0000FD8]> 00000002
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0052> [C0000200] 13 PUSH E0000FD8

---------------- STACK BEGIN <<<<
AX: E0000FD8 BP: E0000FF0 SP: E0000FC8 PC: C0000200
[E0000FC8]> E0000FD8
[E0000FCC]> 00000001
[E0000FD0]> E0000FDC
[E0000FD4]> 00000003
[E0000FD8]> 00000002
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0053> [C0000204] 01 LEA FFFFFFE8(-24)

---------------- STACK BEGIN <<<<
AX: E0000FD8 BP: E0000FF0 SP: E0000FC8 PC: C0000208
[E0000FC8]> E0000FD8
[E0000FCC]> 00000001
[E0000FD0]> E0000FDC
[E0000FD4]> 00000003
[E0000FD8]> 00000002
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0054> [C000020C] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FC8 PC: C0000210
[E0000FC8]> E0000FD8
[E0000FCC]> 00000001
[E0000FD0]> E0000FDC
[E0000FD4]> 00000003
[E0000FD8]> 00000002
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0055> [C0000214] 13 PUSH 00000002

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FC4 PC: C0000214
[E0000FC4]> 00000002
[E0000FC8]> E0000FD8
[E0000FCC]> 00000001
[E0000FD0]> E0000FDC
[E0000FD4]> 00000003
[E0000FD8]> 00000002
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0056> [C0000218] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FC4 PC: C000021C
[E0000FC4]> 00000002
[E0000FC8]> E0000FD8
[E0000FCC]> 00000001
[E0000FD0]> E0000FDC
[E0000FD4]> 00000003
[E0000FD8]> 00000002
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0057> [C0000220] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FC4 PC: C0000224
[E0000FC4]> 00000002
[E0000FC8]> E0000FD8
[E0000FCC]> 00000001
[E0000FD0]> E0000FDC
[E0000FD4]> 00000003
[E0000FD8]> 00000002
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0058> [C0000228] 28 MUL

---------------- STACK BEGIN <<<<
AX: 00000006 BP: E0000FF0 SP: E0000FC8 PC: C0000228
[E0000FC8]> E0000FD8
[E0000FCC]> 00000001
[E0000FD0]> E0000FDC
[E0000FD4]> 00000003
[E0000FD8]> 00000002
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0059> [C000022C] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000006 BP: E0000FF0 SP: E0000FCC PC: C0000230
[E0000FCC]> 00000001
[E0000FD0]> E0000FDC
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0060> [C0000234] 26 ADD

---------------- STACK BEGIN <<<<
AX: 00000007 BP: E0000FF0 SP: E0000FD0 PC: C0000234
[E0000FD0]> E0000FDC
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000001
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0061> [C0000238] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000007 BP: E0000FF0 SP: E0000FD4 PC: C000023C
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0062> [C0000240] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD4 PC: C0000244
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0063> [C0000248] 13 PUSH E0000FD4

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD0 PC: C0000248
[E0000FD0]> E0000FD4
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0064> [C000024C] 01 LEA FFFFFFEC(-20)

---------------- STACK BEGIN <<<<
AX: E0000FDC BP: E0000FF0 SP: E0000FD0 PC: C0000250
[E0000FD0]> E0000FD4
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0065> [C0000254] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000007 BP: E0000FF0 SP: E0000FD0 PC: C0000258
[E0000FD0]> E0000FD4
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0066> [C000025C] 13 PUSH 00000007

---------------- STACK BEGIN <<<<
AX: 00000007 BP: E0000FF0 SP: E0000FCC PC: C000025C
[E0000FCC]> 00000007
[E0000FD0]> E0000FD4
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0067> [C0000260] 01 LEA FFFFFFE8(-24)

---------------- STACK BEGIN <<<<
AX: E0000FD8 BP: E0000FF0 SP: E0000FCC PC: C0000264
[E0000FCC]> 00000007
[E0000FD0]> E0000FD4
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0068> [C0000268] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000006 BP: E0000FF0 SP: E0000FCC PC: C000026C
[E0000FCC]> 00000007
[E0000FD0]> E0000FD4
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0069> [C0000270] 20 LT

---------------- STACK BEGIN <<<<
AX: 00000000 BP: E0000FF0 SP: E0000FD0 PC: C0000270
[E0000FD0]> E0000FD4
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0070> [C0000274] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000000 BP: E0000FF0 SP: E0000FD4 PC: C0000278
[E0000FD4]> 00000000
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0071> [C000027C] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD4 PC: C0000280
[E0000FD4]> 00000000
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0072> [C0000284] 13 PUSH E0000FD4

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD0 PC: C0000284
[E0000FD0]> E0000FD4
[E0000FD4]> 00000000
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0073> [C0000288] 02 IMM 00000001(1)

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FD0 PC: C000028C
[E0000FD0]> E0000FD4
[E0000FD4]> 00000000
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0074> [C0000290] 13 PUSH 00000001

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FCC PC: C0000290
[E0000FCC]> 00000001
[E0000FD0]> E0000FD4
[E0000FD4]> 00000000
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0075> [C0000294] 02 IMM 00000002(2)

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FCC PC: C0000298
[E0000FCC]> 00000001
[E0000FD0]> E0000FD4
[E0000FD4]> 00000000
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0076> [C000029C] 28 MUL

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FD0 PC: C000029C
[E0000FD0]> E0000FD4
[E0000FD4]> 00000000
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0077> [C00002A0] 13 PUSH 00000002

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FCC PC: C00002A0
[E0000FCC]> 00000002
[E0000FD0]> E0000FD4
[E0000FD4]> 00000000
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0078> [C00002A4] 02 IMM 00000003(3)

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FCC PC: C00002A8
[E0000FCC]> 00000002
[E0000FD0]> E0000FD4
[E0000FD4]> 00000000
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0079> [C00002AC] 29 DIV

---------------- STACK BEGIN <<<<
AX: 00000000 BP: E0000FF0 SP: E0000FD0 PC: C00002AC
[E0000FD0]> E0000FD4
[E0000FD4]> 00000000
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0080> [C00002B0] 13 PUSH 00000000

---------------- STACK BEGIN <<<<
AX: 00000000 BP: E0000FF0 SP: E0000FCC PC: C00002B0
[E0000FCC]> 00000000
[E0000FD0]> E0000FD4
[E0000FD4]> 00000000
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0081> [C00002B4] 02 IMM 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000004 BP: E0000FF0 SP: E0000FCC PC: C00002B8
[E0000FCC]> 00000000
[E0000FD0]> E0000FD4
[E0000FD4]> 00000000
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0082> [C00002BC] 26 ADD

---------------- STACK BEGIN <<<<
AX: 00000004 BP: E0000FF0 SP: E0000FD0 PC: C00002BC
[E0000FD0]> E0000FD4
[E0000FD4]> 00000000
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0083> [C00002C0] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000004 BP: E0000FF0 SP: E0000FD4 PC: C00002C4
[E0000FD4]> 00000004
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0084> [C00002C8] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD4 PC: C00002CC
[E0000FD4]> 00000004
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0085> [C00002D0] 13 PUSH E0000FD4

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD0 PC: C00002D0
[E0000FD0]> E0000FD4
[E0000FD4]> 00000004
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0086> [C00002D4] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD0 PC: C00002D8
[E0000FD0]> E0000FD4
[E0000FD4]> 00000004
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0087> [C00002DC] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000004 BP: E0000FF0 SP: E0000FD0 PC: C00002E0
[E0000FD0]> E0000FD4
[E0000FD4]> 00000004
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0088> [C00002E4] 13 PUSH 00000004

---------------- STACK BEGIN <<<<
AX: 00000004 BP: E0000FF0 SP: E0000FCC PC: C00002E4
[E0000FCC]> 00000004
[E0000FD0]> E0000FD4
[E0000FD4]> 00000004
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0089> [C00002E8] 02 IMM 00000001(1)

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FCC PC: C00002EC
[E0000FCC]> 00000004
[E0000FD0]> E0000FD4
[E0000FD4]> 00000004
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0090> [C00002F0] 26 ADD

---------------- STACK BEGIN <<<<
AX: 00000005 BP: E0000FF0 SP: E0000FD0 PC: C00002F0
[E0000FD0]> E0000FD4
[E0000FD4]> 00000004
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0091> [C00002F4] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000005 BP: E0000FF0 SP: E0000FD4 PC: C00002F8
[E0000FD4]> 00000005
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0092> [C00002FC] 13 PUSH 00000005

---------------- STACK BEGIN <<<<
AX: 00000005 BP: E0000FF0 SP: E0000FD0 PC: C00002FC
[E0000FD0]> 00000005
[E0000FD4]> 00000005
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0093> [C0000300] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD0 PC: C0000304
[E0000FD0]> 00000005
[E0000FD4]> 00000005
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0094> [C0000308] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000005 BP: E0000FF0 SP: E0000FD0 PC: C000030C
[E0000FD0]> 00000005
[E0000FD4]> 00000005
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0095> [C0000310] 26 ADD

---------------- STACK BEGIN <<<<
AX: 0000000A BP: E0000FF0 SP: E0000FD4 PC: C0000310
[E0000FD4]> 00000005
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0096> [C0000314] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD4 PC: C0000318
[E0000FD4]> 00000005
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0097> [C000031C] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000005 BP: E0000FF0 SP: E0000FD4 PC: C0000320
[E0000FD4]> 00000005
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0098> [C0000324] 13 PUSH 00000005

---------------- STACK BEGIN <<<<
AX: 00000005 BP: E0000FF0 SP: E0000FD0 PC: C0000324
[E0000FD0]> 00000005
[E0000FD4]> 00000005
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0099> [C0000328] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD0 PC: C000032C
[E0000FD0]> 00000005
[E0000FD4]> 00000005
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0100> [C0000330] 13 PUSH E0000FD4

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FCC PC: C0000330
[E0000FCC]> E0000FD4
[E0000FD0]> 00000005
[E0000FD4]> 00000005
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0101> [C0000334] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FCC PC: C0000338
[E0000FCC]> E0000FD4
[E0000FD0]> 00000005
[E0000FD4]> 00000005
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0102> [C000033C] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000005 BP: E0000FF0 SP: E0000FCC PC: C0000340
[E0000FCC]> E0000FD4
[E0000FD0]> 00000005
[E0000FD4]> 00000005
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0103> [C0000344] 13 PUSH 00000005

---------------- STACK BEGIN <<<<
AX: 00000005 BP: E0000FF0 SP: E0000FC8 PC: C0000344
[E0000FC8]> 00000005
[E0000FCC]> E0000FD4
[E0000FD0]> 00000005
[E0000FD4]> 00000005
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0104> [C0000348] 02 IMM 00000001(1)

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FC8 PC: C000034C
[E0000FC8]> 00000005
[E0000FCC]> E0000FD4
[E0000FD0]> 00000005
[E0000FD4]> 00000005
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0105> [C0000350] 26 ADD

---------------- STACK BEGIN <<<<
AX: 00000006 BP: E0000FF0 SP: E0000FCC PC: C0000350
[E0000FCC]> E0000FD4
[E0000FD0]> 00000005
[E0000FD4]> 00000005
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0106> [C0000354] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000006 BP: E0000FF0 SP: E0000FD0 PC: C0000358
[E0000FD0]> 00000005
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0107> [C000035C] 14 POP

---------------- STACK BEGIN <<<<
AX: 00000005 BP: E0000FF0 SP: E0000FD4 PC: C000035C
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0108> [C0000360] 13 PUSH 00000005

---------------- STACK BEGIN <<<<
AX: 00000005 BP: E0000FF0 SP: E0000FD0 PC: C0000360
[E0000FD0]> 00000005
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0109> [C0000364] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD0 PC: C0000368
[E0000FD0]> 00000005
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0110> [C000036C] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000006 BP: E0000FF0 SP: E0000FD0 PC: C0000370
[E0000FD0]> 00000005
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0111> [C0000374] 26 ADD

---------------- STACK BEGIN <<<<
AX: 0000000B BP: E0000FF0 SP: E0000FD4 PC: C0000374
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0112> [C0000378] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD4 PC: C000037C
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0113> [C0000380] 01 LEA FFFFFFFC(-4)

---------------- STACK BEGIN <<<<
AX: E0000FEC BP: E0000FF0 SP: E0000FD4 PC: C0000384
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0114> [C0000388] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: D0000038 BP: E0000FF0 SP: E0000FD4 PC: C000038C
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0115> [C0000390] 09 LOAD 00000001(1)

---------------- STACK BEGIN <<<<
AX: 00000068 BP: E0000FF0 SP: E0000FD4 PC: C0000394
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0116> [C0000398] 01 LEA FFFFFFFC(-4)

---------------- STACK BEGIN <<<<
AX: E0000FEC BP: E0000FF0 SP: E0000FD4 PC: C000039C
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0117> [C00003A0] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: D0000038 BP: E0000FF0 SP: E0000FD4 PC: C00003A4
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0118> [C00003A8] 13 PUSH D0000038

---------------- STACK BEGIN <<<<
AX: D0000038 BP: E0000FF0 SP: E0000FD0 PC: C00003A8
[E0000FD0]> D0000038
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0119> [C00003AC] 02 IMM 00000002(2)

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FD0 PC: C00003B0
[E0000FD0]> D0000038
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0120> [C00003B4] 26 ADD

---------------- STACK BEGIN <<<<
AX: D000003A BP: E0000FF0 SP: E0000FD4 PC: C00003B4
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0121> [C00003B8] 09 LOAD 00000001(1)

---------------- STACK BEGIN <<<<
AX: 0000006C BP: E0000FF0 SP: E0000FD4 PC: C00003BC
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0122> [C00003C0] 01 LEA FFFFFFFC(-4)

---------------- STACK BEGIN <<<<
AX: E0000FEC BP: E0000FF0 SP: E0000FD4 PC: C00003C4
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0123> [C00003C8] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: D0000038 BP: E0000FF0 SP: E0000FD4 PC: C00003CC
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0124> [C00003D0] 13 PUSH D0000038

---------------- STACK BEGIN <<<<
AX: D0000038 BP: E0000FF0 SP: E0000FD0 PC: C00003D0
[E0000FD0]> D0000038
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0125> [C00003D4] 02 IMM 00000039(57)

---------------- STACK BEGIN <<<<
AX: 00000039 BP: E0000FF0 SP: E0000FD0 PC: C00003D8
[E0000FD0]> D0000038
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0126> [C00003DC] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000039 BP: E0000FF0 SP: E0000FD4 PC: C00003E0
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0127> [C00003E4] 01 LEA FFFFFFFC(-4)

---------------- STACK BEGIN <<<<
AX: E0000FEC BP: E0000FF0 SP: E0000FD4 PC: C00003E8
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0128> [C00003EC] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: D0000038 BP: E0000FF0 SP: E0000FD4 PC: C00003F0
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0129> [C00003F4] 13 PUSH D0000038

---------------- STACK BEGIN <<<<
AX: D0000038 BP: E0000FF0 SP: E0000FD0 PC: C00003F4
[E0000FD0]> D0000038
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0130> [C00003F8] 02 IMM 00000002(2)

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FD0 PC: C00003FC
[E0000FD0]> D0000038
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0131> [C0000400] 26 ADD

---------------- STACK BEGIN <<<<
AX: D000003A BP: E0000FF0 SP: E0000FD4 PC: C0000400
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0132> [C0000404] 09 LOAD 00000001(1)

---------------- STACK BEGIN <<<<
AX: 00000000 BP: E0000FF0 SP: E0000FD4 PC: C0000408
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0133> [C000040C] 01 LEA FFFFFFFC(-4)

---------------- STACK BEGIN <<<<
AX: E0000FEC BP: E0000FF0 SP: E0000FD4 PC: C0000410
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0134> [C0000414] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: D0000038 BP: E0000FF0 SP: E0000FD4 PC: C0000418
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0135> [C000041C] 13 PUSH D0000038

---------------- STACK BEGIN <<<<
AX: D0000038 BP: E0000FF0 SP: E0000FD0 PC: C000041C
[E0000FD0]> D0000038
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0136> [C0000420] 02 IMM 00000002(2)

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FD0 PC: C0000424
[E0000FD0]> D0000038
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0137> [C0000428] 26 ADD

---------------- STACK BEGIN <<<<
AX: D000003A BP: E0000FF0 SP: E0000FD4 PC: C0000428
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0138> [C000042C] 13 PUSH D000003A

---------------- STACK BEGIN <<<<
AX: D000003A BP: E0000FF0 SP: E0000FD0 PC: C000042C
[E0000FD0]> D000003A
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0139> [C0000430] 02 IMM 00000038(56)

---------------- STACK BEGIN <<<<
AX: 00000038 BP: E0000FF0 SP: E0000FD0 PC: C0000434
[E0000FD0]> D000003A
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0140> [C0000438] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000038 BP: E0000FF0 SP: E0000FD4 PC: C000043C
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0141> [C0000440] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD4 PC: C0000444
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0142> [C0000448] 13 PUSH E0000FD4

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD0 PC: C0000448
[E0000FD0]> E0000FD4
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0143> [C000044C] 02 IMM 00000002(2)

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FD0 PC: C0000450
[E0000FD0]> E0000FD4
[E0000FD4]> 00000006
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0144> [C0000454] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FD4 PC: C0000458
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0145> [C000045C] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD4 PC: C0000460
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0146> [C0000464] 13 PUSH E0000FD4

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD0 PC: C0000464
[E0000FD0]> E0000FD4
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0147> [C0000468] 13 PUSH E0000FD4

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FCC PC: C0000468
[E0000FCC]> E0000FD4
[E0000FD0]> E0000FD4
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0148> [C000046C] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FCC PC: C0000470
[E0000FCC]> E0000FD4
[E0000FD0]> E0000FD4
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0149> [C0000474] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FCC PC: C0000478
[E0000FCC]> E0000FD4
[E0000FD0]> E0000FD4
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0150> [C000047C] 13 PUSH 00000002

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FC8 PC: C000047C
[E0000FC8]> 00000002
[E0000FCC]> E0000FD4
[E0000FD0]> E0000FD4
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0151> [C0000480] 02 IMM 00000001(1)

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FC8 PC: C0000484
[E0000FC8]> 00000002
[E0000FCC]> E0000FD4
[E0000FD0]> E0000FD4
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0152> [C0000488] 26 ADD

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FCC PC: C0000488
[E0000FCC]> E0000FD4
[E0000FD0]> E0000FD4
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0153> [C000048C] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FD0 PC: C0000490
[E0000FD0]> E0000FD4
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0154> [C0000494] 14 POP

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD4 PC: C0000494
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0155> [C0000498] 13 PUSH E0000FD4

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD0 PC: C0000498
[E0000FD0]> E0000FD4
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0156> [C000049C] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD0 PC: C00004A0
[E0000FD0]> E0000FD4
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0157> [C00004A4] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FD0 PC: C00004A8
[E0000FD0]> E0000FD4
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0158> [C00004AC] 13 PUSH 00000003

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FCC PC: C00004AC
[E0000FCC]> 00000003
[E0000FD0]> E0000FD4
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0159> [C00004B0] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FCC PC: C00004B4
[E0000FCC]> 00000003
[E0000FD0]> E0000FD4
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0160> [C00004B8] 13 PUSH E0000FD4

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FC8 PC: C00004B8
[E0000FC8]> E0000FD4
[E0000FCC]> 00000003
[E0000FD0]> E0000FD4
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0161> [C00004BC] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FC8 PC: C00004C0
[E0000FC8]> E0000FD4
[E0000FCC]> 00000003
[E0000FD0]> E0000FD4
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0162> [C00004C4] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FC8 PC: C00004C8
[E0000FC8]> E0000FD4
[E0000FCC]> 00000003
[E0000FD0]> E0000FD4
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0163> [C00004CC] 13 PUSH 00000003

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FC4 PC: C00004CC
[E0000FC4]> 00000003
[E0000FC8]> E0000FD4
[E0000FCC]> 00000003
[E0000FD0]> E0000FD4
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0164> [C00004D0] 02 IMM 00000001(1)

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FC4 PC: C00004D4
[E0000FC4]> 00000003
[E0000FC8]> E0000FD4
[E0000FCC]> 00000003
[E0000FD0]> E0000FD4
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0165> [C00004D8] 26 ADD

---------------- STACK BEGIN <<<<
AX: 00000004 BP: E0000FF0 SP: E0000FC8 PC: C00004D8
[E0000FC8]> E0000FD4
[E0000FCC]> 00000003
[E0000FD0]> E0000FD4
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0166> [C00004DC] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000004 BP: E0000FF0 SP: E0000FCC PC: C00004E0
[E0000FCC]> 00000003
[E0000FD0]> E0000FD4
[E0000FD4]> 00000004
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0167> [C00004E4] 14 POP

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FD0 PC: C00004E4
[E0000FD0]> E0000FD4
[E0000FD4]> 00000004
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0168> [C00004E8] 13 PUSH 00000003

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FCC PC: C00004E8
[E0000FCC]> 00000003
[E0000FD0]> E0000FD4
[E0000FD4]> 00000004
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0169> [C00004EC] 02 IMM 00000001(1)

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FCC PC: C00004F0
[E0000FCC]> 00000003
[E0000FD0]> E0000FD4
[E0000FD4]> 00000004
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0170> [C00004F4] 27 SUB

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FD0 PC: C00004F4
[E0000FD0]> E0000FD4
[E0000FD4]> 00000004
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0171> [C00004F8] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FD4 PC: C00004FC
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0172> [C0000500] 13 PUSH 00000002

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FD0 PC: C0000500
[E0000FD0]> 00000002
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0173> [C0000504] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD0 PC: C0000508
[E0000FD0]> 00000002
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0174> [C000050C] 13 PUSH E0000FD4

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FCC PC: C000050C
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0175> [C0000510] 13 PUSH E0000FD4

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FC8 PC: C0000510
[E0000FC8]> E0000FD4
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0176> [C0000514] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FC8 PC: C0000518
[E0000FC8]> E0000FD4
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0177> [C000051C] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FC8 PC: C0000520
[E0000FC8]> E0000FD4
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0178> [C0000524] 13 PUSH 00000002

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FC4 PC: C0000524
[E0000FC4]> 00000002
[E0000FC8]> E0000FD4
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0179> [C0000528] 02 IMM 00000001(1)

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FC4 PC: C000052C
[E0000FC4]> 00000002
[E0000FC8]> E0000FD4
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0180> [C0000530] 26 ADD

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FC8 PC: C0000530
[E0000FC8]> E0000FD4
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0181> [C0000534] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FCC PC: C0000538
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0182> [C000053C] 14 POP

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FD0 PC: C000053C
[E0000FD0]> 00000002
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0183> [C0000540] 13 PUSH E0000FD4

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FCC PC: C0000540
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0184> [C0000544] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FCC PC: C0000548
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0185> [C000054C] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FCC PC: C0000550
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0186> [C0000554] 13 PUSH 00000003

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FC8 PC: C0000554
[E0000FC8]> 00000003
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0187> [C0000558] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FC8 PC: C000055C
[E0000FC8]> 00000003
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0188> [C0000560] 13 PUSH E0000FD4

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FC4 PC: C0000560
[E0000FC4]> E0000FD4
[E0000FC8]> 00000003
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0189> [C0000564] 01 LEA FFFFFFE4(-28)

---------------- STACK BEGIN <<<<
AX: E0000FD4 BP: E0000FF0 SP: E0000FC4 PC: C0000568
[E0000FC4]> E0000FD4
[E0000FC8]> 00000003
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0190> [C000056C] 09 LOAD 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FC4 PC: C0000570
[E0000FC4]> E0000FD4
[E0000FC8]> 00000003
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0191> [C0000574] 13 PUSH 00000003

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FC0 PC: C0000574
[E0000FC0]> 00000003
[E0000FC4]> E0000FD4
[E0000FC8]> 00000003
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0192> [C0000578] 02 IMM 00000001(1)

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FC0 PC: C000057C
[E0000FC0]> 00000003
[E0000FC4]> E0000FD4
[E0000FC8]> 00000003
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0193> [C0000580] 26 ADD

---------------- STACK BEGIN <<<<
AX: 00000004 BP: E0000FF0 SP: E0000FC4 PC: C0000580
[E0000FC4]> E0000FD4
[E0000FC8]> 00000003
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000003
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0194> [C0000584] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000004 BP: E0000FF0 SP: E0000FC8 PC: C0000588
[E0000FC8]> 00000003
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000004
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0195> [C000058C] 14 POP

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FCC PC: C000058C
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000004
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0196> [C0000590] 13 PUSH 00000003

---------------- STACK BEGIN <<<<
AX: 00000003 BP: E0000FF0 SP: E0000FC8 PC: C0000590
[E0000FC8]> 00000003
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000004
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0197> [C0000594] 02 IMM 00000001(1)

---------------- STACK BEGIN <<<<
AX: 00000001 BP: E0000FF0 SP: E0000FC8 PC: C0000598
[E0000FC8]> 00000003
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000004
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0198> [C000059C] 27 SUB

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FCC PC: C000059C
[E0000FCC]> E0000FD4
[E0000FD0]> 00000002
[E0000FD4]> 00000004
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0199> [C00005A0] 10 SAVE 00000004(4)

---------------- STACK BEGIN <<<<
AX: 00000002 BP: E0000FF0 SP: E0000FD0 PC: C00005A4
[E0000FD0]> 00000002
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0200> [C00005A8] 26 ADD

---------------- STACK BEGIN <<<<
AX: 00000004 BP: E0000FF0 SP: E0000FD4 PC: C00005A8
[E0000FD4]> 00000002
[E0000FD8]> 00000006
[E0000FDC]> 00000007
[E0000FE0]> 00000001
[E0000FE4]> D0000028
[E0000FE8]> D0000028
[E0000FEC]> D0000038
[E0000FF0]> 00000000
[E0000FF4]> E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0201> [C00005AC] 12 LEV

---------------- STACK BEGIN <<<<
AX: 00000004 BP: 00000000 SP: E0000FF8 PC: E0000FF8
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0202> [E0000FFC] 13 PUSH 00000004

---------------- STACK BEGIN <<<<
AX: 00000004 BP: 00000000 SP: E0000FF4 PC: E0000FFC
[E0000FF4]> 00000004
[E0000FF8]> 0000000D
[E0000FFC]> 00000028
---------------- STACK END >>>>

0203> [E0001000] 40 EXIT
exit(4)

Process finished with exit code 0
